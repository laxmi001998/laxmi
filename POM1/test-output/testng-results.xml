<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="4" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-07T20:47:09 IST" name="Default suite" finished-at="2023-02-07T20:47:57 IST" duration-ms="48415">
    <groups>
      <group name="regression">
        <method signature="LoginTest.verifyTitleOfLoginPage()[pri:0, instance:testt.LoginTest@441772e]" name="verifyTitleOfLoginPage" class="testt.LoginTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="LoginTest.verifyTitleOfLoginPage()[pri:0, instance:testt.LoginTest@441772e]" name="verifyTitleOfLoginPage" class="testt.LoginTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-02-07T20:47:09 IST" name="Default test" finished-at="2023-02-07T20:47:57 IST" duration-ms="48415">
      <class name="testt.LoginTest">
        <test-method is-config="true" signature="initBrowser()[pri:0, instance:testt.LoginTest@441772e]" started-at="2023-02-07T20:47:09 IST" name="initBrowser" finished-at="2023-02-07T20:47:56 IST" duration-ms="47176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initBrowser -->
        <test-method is-config="true" signature="pageObjects()[pri:0, instance:testt.LoginTest@441772e]" started-at="2023-02-07T20:47:56 IST" name="pageObjects" finished-at="2023-02-07T20:47:56 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageObjects -->
        <test-method signature="verifyTitleOfLoginPage()[pri:0, instance:testt.LoginTest@441772e]" started-at="2023-02-07T20:47:56 IST" name="verifyTitleOfLoginPage" finished-at="2023-02-07T20:47:56 IST" duration-ms="320" status="FAIL">
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[invalid selector: An invalid or illegal selector was specified
  (Session info: MicrosoftEdge=109.0.1518.78)
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [43ae076b273bb6906cdc44f3352f9632, findElement {using=id, value=}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 109.0.1518.78, ms:edgeOptions: {debuggerAddress: localhost:60801}, msedge: {msedgedriverVersion: 109.0.1518.78 (4e4b32c38163..., userDataDir: C:\Users\q\AppData\Local\Te...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60801/devtoo..., se:cdpVersion: 109.0.1518.78, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 43ae076b273bb6906cdc44f3352f9632]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: invalid selector: An invalid or illegal selector was specified
  (Session info: MicrosoftEdge=109.0.1518.78)
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [43ae076b273bb6906cdc44f3352f9632, findElement {using=id, value=}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 109.0.1518.78, ms:edgeOptions: {debuggerAddress: localhost:60801}, msedge: {msedgedriverVersion: 109.0.1518.78 (4e4b32c38163..., userDataDir: C:\Users\q\AppData\Local\Te...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60801/devtoo..., se:cdpVersion: 109.0.1518.78, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 43ae076b273bb6906cdc44f3352f9632
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:535)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:351)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:343)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy16.getText(Unknown Source)
at mainjavaa.LoginPage.titleOfLoginPage(LoginPage.java:42)
at testt.LoginTest.verifyTitleOfLoginPage(LoginTest.java:11)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitleOfLoginPage -->
        <test-method is-config="true" signature="tearDownEnvironment()[pri:0, instance:testt.LoginTest@441772e]" started-at="2023-02-07T20:47:56 IST" name="tearDownEnvironment" finished-at="2023-02-07T20:47:57 IST" duration-ms="714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownEnvironment -->
      </class> <!-- testt.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
